// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Services.Migrations
{
    [DbContext(typeof(myDBContext))]
    [Migration("20220406155647_db23232")]
    partial class db23232
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BankCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultBank")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseCommonPaymentPage")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("BankParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("BankParameters");
                });

            modelBuilder.Entity("BankPrefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("BankPrefix");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContentOrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ContentShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentTypes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClick")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFooterMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGallery")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHamburgerMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeaderMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMap")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublish")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSideMenu")
                        .HasColumnType("bit");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<int>("LangId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("OrjId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormTypeId");

                    b.HasIndex("LangId");

                    b.HasIndex("OrjId");

                    b.HasIndex("ParentId");

                    b.ToTable("ContentPage");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("DoubleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouponType")
                        .HasColumnType("int");

                    b.Property<decimal>("CouponValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Limit")
                        .HasColumnType("int");

                    b.Property<decimal>("MinBasket")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Used")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coupon");
                });

            modelBuilder.Entity("CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<bool>("CampaignCard")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<bool>("ManufacturerCard")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("CreditCardInstallment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallmentRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CreditCardId");

                    b.ToTable("CreditCardInstallments");
                });

            modelBuilder.Entity("CreditCardPrefix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardId");

                    b.ToTable("CreditCardPrefixes");
                });

            modelBuilder.Entity("District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeighName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("PostaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TownId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BannerImageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("GalleryId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("PictureId")
                        .HasColumnType("int");

                    b.Property<int?>("ThumbImageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_class")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BannerImageId")
                        .IsUnique()
                        .HasFilter("[BannerImageId] IS NOT NULL");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GalleryId");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("ThumbImageId")
                        .IsUnique()
                        .HasFilter("[ThumbImageId] IS NOT NULL");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("FormDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<int?>("FormsId")
                        .HasColumnType("int");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Types")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_class")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormsId");

                    b.ToTable("FormDocument");
                });

            modelBuilder.Entity("FormType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("DescName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormType");
                });

            modelBuilder.Entity("Forms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Custom1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Custom2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Custom3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsRead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("MainList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormTypeId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Lang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lang");
                });

            modelBuilder.Entity("LangDisplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LangDisplay");
                });

            modelBuilder.Entity("Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Nationality");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAdressId")
                        .HasColumnType("int");

                    b.Property<string>("BillingAdressNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfirmStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IsSozlesme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<int?>("MainProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShippingAddId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("MainProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accomodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Club")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("RaceSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RideBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("PaymentTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BankRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("ExtraInstallment")
                        .HasColumnType("int");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("PaymentTransactions");
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarcodeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventPackage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<int?>("MainProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceChip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MainProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("RoleParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceConfigId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleParentId");

                    b.HasIndex("ServiceConfigId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ServiceConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlTarget")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ServiceConfig");
                });

            modelBuilder.Entity("ServiceConfigAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsList")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsUpdate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ServiceConfigId");

                    b.HasIndex("UsersId");

                    b.ToTable("ServiceConfigAuth");
                });

            modelBuilder.Entity("SiteConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BodyScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GooglePlus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("JokerPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailGorunenAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpMailPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SmtpSSL")
                        .HasColumnType("bit");

                    b.Property<string>("StartAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartPage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tumblr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("layoutUrlBase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteConfig");
                });

            modelBuilder.Entity("Spec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsTanim")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("SpecType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Spec");
                });

            modelBuilder.Entity("SpecAttr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttrValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecId");

                    b.ToTable("SpecAttr");
                });

            modelBuilder.Entity("SpecContentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentTypes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecId");

                    b.ToTable("SpecContentType");
                });

            modelBuilder.Entity("SpecContentValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentPageId")
                        .HasColumnType("int");

                    b.Property<string>("ContentValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContentPageId");

                    b.HasIndex("SpecId");

                    b.ToTable("SpecContentValue");
                });

            modelBuilder.Entity("Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Town");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactEmergency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HealtReportUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsKVKK")
                        .HasColumnType("bit");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("LicenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentUserId")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferredLang")
                        .HasColumnType("int");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCKNPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserStatusType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ParentUserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UserAdress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<string>("Def")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Tax_Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tax_No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TownId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("TownId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdress");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreaDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreaUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IsDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModUser")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("BankParameter", b =>
                {
                    b.HasOne("Bank", "Bank")
                        .WithMany("Parameters")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("BankPrefix", b =>
                {
                    b.HasOne("Country", "Country")
                        .WithMany("BankPrefix")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.HasOne("Country", "Country")
                        .WithMany("City")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.HasOne("FormType", "FormType")
                        .WithMany("ContentPage")
                        .HasForeignKey("FormTypeId");

                    b.HasOne("Lang", "Lang")
                        .WithMany("ContentPage")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContentPage", "Orj")
                        .WithMany()
                        .HasForeignKey("OrjId");

                    b.HasOne("ContentPage", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FormType");

                    b.Navigation("Lang");

                    b.Navigation("Orj");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CreditCard", b =>
                {
                    b.HasOne("Bank", "Bank")
                        .WithMany("CreditCards")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("CreditCardInstallment", b =>
                {
                    b.HasOne("Bank", null)
                        .WithMany("Installments")
                        .HasForeignKey("BankId");

                    b.HasOne("CreditCard", "CreditCard")
                        .WithMany("Installments")
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("CreditCardPrefix", b =>
                {
                    b.HasOne("CreditCard", "CreditCard")
                        .WithMany("Prefixes")
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("District", b =>
                {
                    b.HasOne("Town", "Town")
                        .WithMany("District")
                        .HasForeignKey("TownId");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("Documents", b =>
                {
                    b.HasOne("ContentPage", "BannerImage")
                        .WithOne("BannerImage")
                        .HasForeignKey("Documents", "BannerImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ContentPage", "Document")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ContentPage", "Gallery")
                        .WithMany("Gallery")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ContentPage", "Picture")
                        .WithOne("Picture")
                        .HasForeignKey("Documents", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ContentPage", "ThumbImage")
                        .WithOne("ThumbImage")
                        .HasForeignKey("Documents", "ThumbImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BannerImage");

                    b.Navigation("Document");

                    b.Navigation("Gallery");

                    b.Navigation("Picture");

                    b.Navigation("ThumbImage");
                });

            modelBuilder.Entity("FormDocument", b =>
                {
                    b.HasOne("Forms", "Forms")
                        .WithMany("FormDocument")
                        .HasForeignKey("FormsId");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("Forms", b =>
                {
                    b.HasOne("FormType", "FormType")
                        .WithMany("Forms")
                        .HasForeignKey("FormTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormType");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("Coupon", "Coupon")
                        .WithMany("Order")
                        .HasForeignKey("CouponId");

                    b.HasOne("Product", "MainProduct")
                        .WithMany()
                        .HasForeignKey("MainProductId");

                    b.HasOne("User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("MainProduct");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.HasOne("Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PaymentTransaction", b =>
                {
                    b.HasOne("Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Product", "MainProduct")
                        .WithMany("MainProducts")
                        .HasForeignKey("MainProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MainProduct");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.HasOne("Role", "RoleParent")
                        .WithMany("ParentRoles")
                        .HasForeignKey("RoleParentId");

                    b.HasOne("ServiceConfig", null)
                        .WithMany("Role")
                        .HasForeignKey("ServiceConfigId");

                    b.Navigation("RoleParent");
                });

            modelBuilder.Entity("ServiceConfig", b =>
                {
                    b.HasOne("ServiceConfig", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ServiceConfigAuth", b =>
                {
                    b.HasOne("Permission", "Permission")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("PermissionId");

                    b.HasOne("Role", "Role")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("RoleId");

                    b.HasOne("ServiceConfig", "ServiceConfig")
                        .WithMany("ServiceConfigAuth")
                        .HasForeignKey("ServiceConfigId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Permission");

                    b.Navigation("Role");

                    b.Navigation("ServiceConfig");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Spec", b =>
                {
                    b.HasOne("Spec", "Parent")
                        .WithMany("SpecChilds")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SpecAttr", b =>
                {
                    b.HasOne("Spec", "Spec")
                        .WithMany("SpecAttrs")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("SpecContentType", b =>
                {
                    b.HasOne("Spec", "Spec")
                        .WithMany()
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("SpecContentValue", b =>
                {
                    b.HasOne("ContentPage", "ContentPage")
                        .WithMany("SpecContentValue")
                        .HasForeignKey("ContentPageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Spec", "Spec")
                        .WithMany("SpecContentValue")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContentPage");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("Town", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Town")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Nationality", "Nationality")
                        .WithMany("User")
                        .HasForeignKey("NationalityId");

                    b.HasOne("User", "ParentUser")
                        .WithMany("ParentUsers")
                        .HasForeignKey("ParentUserId");

                    b.Navigation("Nationality");

                    b.Navigation("ParentUser");
                });

            modelBuilder.Entity("UserAdress", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("UserAdress")
                        .HasForeignKey("CityId");

                    b.HasOne("Country", "Country")
                        .WithMany("UserAdress")
                        .HasForeignKey("CountryId");

                    b.HasOne("District", null)
                        .WithMany("UserAdress")
                        .HasForeignKey("DistrictId");

                    b.HasOne("Town", null)
                        .WithMany("UserAdress")
                        .HasForeignKey("TownId");

                    b.HasOne("User", "User")
                        .WithMany("UserAdress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bank", b =>
                {
                    b.Navigation("CreditCards");

                    b.Navigation("Installments");

                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Navigation("Town");

                    b.Navigation("UserAdress");
                });

            modelBuilder.Entity("ContentPage", b =>
                {
                    b.Navigation("BannerImage");

                    b.Navigation("Childs");

                    b.Navigation("Documents");

                    b.Navigation("Gallery");

                    b.Navigation("Picture");

                    b.Navigation("SpecContentValue");

                    b.Navigation("ThumbImage");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Navigation("BankPrefix");

                    b.Navigation("City");

                    b.Navigation("UserAdress");
                });

            modelBuilder.Entity("Coupon", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("CreditCard", b =>
                {
                    b.Navigation("Installments");

                    b.Navigation("Prefixes");
                });

            modelBuilder.Entity("District", b =>
                {
                    b.Navigation("UserAdress");
                });

            modelBuilder.Entity("FormType", b =>
                {
                    b.Navigation("ContentPage");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("Forms", b =>
                {
                    b.Navigation("FormDocument");
                });

            modelBuilder.Entity("Lang", b =>
                {
                    b.Navigation("ContentPage");
                });

            modelBuilder.Entity("Nationality", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("Permission", b =>
                {
                    b.Navigation("ServiceConfigAuth");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("MainProducts");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("ParentRoles");

                    b.Navigation("Permissions");

                    b.Navigation("ServiceConfigAuth");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ServiceConfig", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Role");

                    b.Navigation("ServiceConfigAuth");
                });

            modelBuilder.Entity("Spec", b =>
                {
                    b.Navigation("SpecAttrs");

                    b.Navigation("SpecChilds");

                    b.Navigation("SpecContentValue");
                });

            modelBuilder.Entity("Town", b =>
                {
                    b.Navigation("District");

                    b.Navigation("UserAdress");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("ParentUsers");

                    b.Navigation("UserAdress");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
